import { createRouter, createWebHistory } from "vue-router";

import adminRoutes from "./adminRoutes";
import userRoutes from "./userRoutes";
import visitorRoutes from "./visitorRoutes";

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes: [...visitorRoutes, ...userRoutes, ...adminRoutes],
});

// üîí Guard global de s√©curit√©
router.beforeEach((to, from, next) => {
  //to est l‚Äôobjet qui contient les infos de la page o√π l‚Äôutilisateur veut aller.
  //next() est une fonction que tu dois appeler pour continuer la navigation ou la rediriger
  const token = localStorage.getItem("jwt");

  // Si la route demande un r√¥le admin
  if (to.meta.requiresAdmin) {
    // Pas connect√© ‚Üí redirection vers login
    if (!token) {
      return next({ name: "login" });
    }
    try {
      // D√©codage du token pour extraire le r√¥le
      const payload = JSON.parse(atob(token.split(".")[1]));

      // Si le r√¥le est ROLE_ADMIN ‚Üí OK
      if (payload.role === "ROLE_ADMIN") {
        return next();
      } else {
        // Le user est connect√© mais pas admin ‚Üí redirection refus
        return next({ name: "unauthorized" });
      }
    } catch (error) {
      console.error("Token invalide :", error);
      return next({ name: "login" }); // Token cass√© ‚Üí on renvoie au login
    }
  }
  // Aucune restriction ‚Üí acc√®s autoris√©
  next();
});

export default router;
